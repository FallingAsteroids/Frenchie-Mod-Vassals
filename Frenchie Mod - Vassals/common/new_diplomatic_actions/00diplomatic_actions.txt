# Triggers and effects will be given the Actor's scope, with the Recipient's as FROM

static_actions = # static_actions is a reserved token.
{
	# alert_index maps to the frame of the alert icon
	royal_marriage = 										{ alert_index = 1 alert_tooltip = ICON_RM }
	requestpeace = 										{ alert_index = 2 alert_tooltip = ICON_PEACE  } # alert_index will be overwritten in code for this one.
	allianceaction = 										{ alert_index = 3 alert_tooltip = ICON_ALLIANCE }
# 4 is currently unused.
	integrationaction = 									{ alert_index = 5 alert_tooltip = ICON_ANNEX }
	annexationaction =									{ alert_index = 5 alert_tooltip = ICON_ANNEX }
	vassalaction = 										{ alert_index = 6 alert_tooltip = ICON_VASSAL }
	milaccess = 											{ alert_index = 7 alert_tooltip = ICON_ASKMIL }
	fleet_access = 										{ alert_index = 8 alert_tooltip = ICON_ASKFLEET }
	offermilaccess = 										{ alert_index = 9 alert_tooltip = ICON_OFFACC }
	callaction = 											{ alert_index = 10 alert_tooltip = ICON_CALLALLY } # This one is referred to in the code (settings.cpp)
	offerloan = 												{ alert_index = 11 alert_tooltip = ICON_OFFERLOAN }
	sellprov = 												{ alert_index = 12 alert_tooltip = ICON_PROVSALE }
		#13 is cursed
	request_to_join_federation = 						{ alert_index = 14 alert_tooltip = ICON_FEDERATIONREQUEST }
	invite_to_federation = 								{ alert_index = 15 alert_tooltip = ICON_FEDERATIONINVITE }
	transfer_trade_power = 							{ alert_index = 16 alert_tooltip = TRANSFER_TRADE_POWER }
	religious_unity_action = 							{ alert_index = 17 alert_tooltip = ICON_RELIGIOUS_UNITY }
		# 18 is used by requestpeace
	form_coalition = 										{ alert_index = 19 alert_tooltip = ICON_FORM_COALITION }
	enforce_peace = 										{ alert_index = 20 alert_tooltip = ICON_ENFORCE_PEACE } # This one may be overwritten in code.
	grant_electorate = 									{ alert_index = 21 alert_tooltip = ICON_GRANT_ELECTORATE }
	demand_unlawful_territory_action = 			{ alert_index = 22 alert_tooltip = ICON_DEMAND_UNLAWFUL_TERRITORY }
		# 23 is used by requestpeace
		# 24 is used by requestpeace
		# 25 is used by requestpeace
		# 26 is used by requestpeace
		# 27 is used by enforce_peace (when actor is coalition leader) with tooltip "ICON_ENFORCE_PEACE_COALITION_LEADER"
	support_independence_action = 					{ alert_index = 28 alert_tooltip = support_independence }
	steer_trade = 										{ alert_index = 29 alert_tooltip = ICON_STEER_TRADE }
	ask_for_march = 										{ alert_index = 30 alert_tooltip = ICON_MARCH }
	sell_ships_action = 									{ alert_index = 31 alert_tooltip = ICON_FLEETSALE }
	grant_freecity = 										{ alert_index = 32 alert_tooltip = ICON_GRANT_FREECITY }
# 33 is currently unused
	invite_to_trade_league = 							{ alert_index = 34 alert_tooltip = ICON_TRADELEAGUEINVITE }
	request_to_join_trade_league = 					{ alert_index = 35 alert_tooltip = ICON_TRADELEAGUEREQUEST }
	sharemap = 											{ alert_index = 36 alert_tooltip = ICON_REQUESTSHAREMAP } # alert_tooltip gets special treatment in the code
	condottieri_action = 								{ alert_index = 37 alert_tooltip = ICON_CONDOTTIERI }
	offer_fleet_access = 								{ alert_index = 38 alert_tooltip = ICON_OFFERFLEET }
	break_alliance = 										{ alert_index = 39 alert_tooltip = ICON_BREAK_ALLIANCE }
	tributary_state_action = 							{ alert_index = 40 alert_tooltip = ICON_TRIBUTARY }
	ask_for_tributary_state_action = 				{ alert_index = 41 alert_tooltip = ICON_ASK_TRIBUTARY }
	knowledge_sharing = 								{ alert_index = 42 alert_tooltip = ICON_KNOWLEDGESHARE } #The answer to life
# 43 is currently unused
	charter_company = 								{ alert_index = 44 alert_tooltip = ICON_CHARTERCOMPANY }
}

# Create new diplomatic actions like this. AI will currently never send them.
demand_dummy = {
	category = french

	alert_index = 40
	alert_tooltip = demand_dummy_alert_tooltip

	require_acceptance = yes # Whether the recipient gets an option to decline

	is_visible = {
		always = no ############################ Remove this line to unleash the magic ########################################
		religion_group = christian
		is_subject = no
		FROM = {
			is_subject = no
		}
	}
	is_allowed = {
		variable_arithmetic_trigger = {
			custom_tooltip = HAS_OLDER_RULER_THAN_THEIR_HEIR
			export_to_variable = { # All export to variable will happen first. Then the other effects and triggers will be executed/evaluated in order
				variable_name = my_age
				value = trigger_value:ruler_age
			}
			export_to_variable = {
				variable_name = their_age
				value = trigger_value:heir_age
				who = FROM
			}
			ruler_age = 0 # This is a normal trigger.
			FROM = {
				heir_age = 0 # This is a normal trigger too.
			}
			check_variable = { # This trigger is only allowed inside a variable_arithmetic_trigger.
				which = my_age
				which = their_age
			}
		}
		religion = catholic
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = 20
			mutual = yes
		}
		create_subject = {
			subject_type = dummy
			subject = FROM
		}
	}
	on_decline = {
		add_trust = {
			who = FROM
			value = -100
			mutual = no
		}
	}

	ai_acceptance = { # This works similarly to variable_arithmetic_trigger, but does not support triggers generally. Instead, "limit" will be evaluated first and the rest ignored if it isn't passed.
		add_entry = {
			name = TRUST
			limit = { religion = catholic }
			export_to_variable = {
				variable_name = ai_value # Each "add_entry" must create one variable called "ai_value", the value of which will be extracted after executing all effects
				value = trust
				who = FROM
				with = THIS
			}
			subtract_variable = { which = ai_value value = 50 }
			multiply_variable = { which = ai_value value = 2 }
		}
		add_entry = {
			name = TRUST
			limit = { NOT = { religion = catholic } }
			export_to_variable = {
				variable_name = ai_value
				value = trust
				who = FROM
				with = THIS
			}
			export_to_variable = {
				variable_name = is_defender
				value = trigger_value:is_defender_of_faith # This sets is_defender to either 0.0 or 1.0
			}
			multiply_variable = {
				which = is_defender
				value = 10
			}
			change_variable = {
				which = ai_value
				which = is_defender # This adds 10 to ai_value if you are defender of faith
			}
			subtract_variable = { which = ai_value value = 50 }
		}
		add_entry = {
			name = OPINION
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = THIS
			}
			divide_variable = { which = ai_value value = 4 }
		}
	}

	ai_will_do = { # this is a trigger
		has_opinion_modifier = {
			modifier = insulted
			who = FROM
		}
	}
}

cancel_dummy =  {
	category = french
	require_acceptance = no
	is_visible = {
		overlord_of = FROM
		FROM = {
			is_subject_of_type = dummy
		}
	}
	is_allowed = {
		reverse_has_opinion_modifier = {
			modifier = insulted
			who = FROM
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = -100
			mutual = yes
		}
		FROM = {
			grant_independence = yes
		}
	}
	ai_will_do = {
		always = no
	}
}

demand_estate = {
	category = french

	alert_index = 40
	alert_tooltip = demand_dummy_alert_tooltip

	require_acceptance = yes # Whether the recipient gets an option to decline

	is_visible = {
		always = no ############################ Remove this line to unleash the magic ########################################
		NOT = {
			is_subject_of = FROM
			is_subject_of = THIS
			is_subject_of_type = estate
		}
	}
	is_allowed = {
		always = yes
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = 20
			mutual = yes
		}
		create_subject = {
			subject_type = estate
			subject = FROM
		}
	}
	on_decline =	{	}

	ai_acceptance = { # This works similarly to variable_arithmetic_trigger, but does not support triggers generally. Instead, "limit" will be evaluated first and the rest ignored if it isn't passed.
		add_entry = {
			name = TRUST
			limit = { religion = catholic }
			export_to_variable = {
				variable_name = ai_value # Each "add_entry" must create one variable called "ai_value", the value of which will be extracted after executing all effects
				value = trust
				who = FROM
				with = THIS
			}
			subtract_variable = { which = ai_value value = 50 }
			multiply_variable = { which = ai_value value = 2 }
		}
		add_entry = {
			name = TRUST
			limit = { NOT = { religion = catholic } }
			export_to_variable = {
				variable_name = ai_value
				value = trust
				who = FROM
				with = THIS
			}
			export_to_variable = {
				variable_name = is_defender
				value = trigger_value:is_defender_of_faith # This sets is_defender to either 0.0 or 1.0
			}
			multiply_variable = {
				which = is_defender
				value = 10
			}
			change_variable = {
				which = ai_value
				which = is_defender # This adds 10 to ai_value if you are defender of faith
			}
			subtract_variable = { which = ai_value value = 50 }
		}
		add_entry = {
			name = OPINION
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = THIS
			}
			divide_variable = { which = ai_value value = 4 }
		}
	}

	ai_will_do = { # this is a trigger
		has_opinion_modifier = {
			modifier = insulted
			who = FROM
		}
	}
}

cancel_estate =  {
	category = french
	require_acceptance = no
	is_visible = {
		overlord_of = FROM
		FROM = {
			is_subject_of_type = estate
		}
	}
	is_allowed = {
		reverse_has_opinion_modifier = {
			modifier = insulted
			who = FROM
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = -100
			mutual = yes
		}
		FROM = {
			grant_independence = yes
		}
	}
	ai_will_do = {
		always = no
	}
}

lower_autonomy = {
	category = influence

	alert_index = 40
	alert_tooltip = demand_dummy_alert_tooltip

	require_acceptance = yes # Whether the recipient gets an option to decline

	is_visible = {
		ROOT = {
			NOT = {
				is_subject_of_type = estate
				is_subject_of_type = vassal
				is_subject_of = FROM
			}

		}
		FROM = {
			is_subject_of = ROOT
			NOT = {
				is_subject_of_type = estate
				is_subject_of_type = protectorate
				is_subject_of_type = tributary_state
			}
		}
	}
	is_allowed = {
		ROOT = {
			NOT = {
				is_at_war = yes
			}

		}
		FROM = {
			NOT = {
				is_at_war = yes
			}
		}
	}
	on_accept = {
		log = "[Root.GetName] has lowered the autonomy of [From.GetName]"
		if = {
			limit = {
				FROM = {
					is_subject_of_type = autonomous_vassal
				}
			}
			create_subject = {
				subject_type = vassal
				subject = FROM
			}
		} ############# PROGRESS
	}
	on_decline = {
		add_opinion = {
			who = FROM
			modifier = declined_vassal_status
		}
	}
	ai_acceptance = {
		add_entry = { name = Base
			export_to_variable = {
				variable_name = ai_value
				value = -50
				who = FROM
				with = THIS
			}
		}
		add_entry = { name = Free_City
			limit = {
				FROM = { has_reform = free_city }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -50
			}
		}
		add_entry = { name = Trading_City
			limit = {
				FROM = { has_reform = trading_city }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -50
			}
		}
		add_entry = { name = In_Trade_League
			limit = {
				FROM = { is_in_trade_league = yes }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -50
			}
		}
		add_entry = { name = Married
			limit = {
				FROM = { marriage_with = ROOT }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 15
			}
		}
		add_entry = { name = Alliance
			limit = {
				FROM = { alliance_with = ROOT }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 30
			}
		}
		add_entry = { name = Is_Emperor
			limit = {
				ROOT = { is_emperor = yes }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 20
			}
		}
		add_entry = { name = Is_Elector
			limit = {
				FROM = { is_elector = yes}
			}
			export_to_variable = {
				variable_name = ai_value
				value = -80
				who = FROM
			}
		}
		add_entry = { name = Trust
			export_to_variable = {
				variable_name = ai_value
				value = trust
				who = FROM
				with = ROOT
			}
			multiply_variable = {
				which = ai_value
				value = 1.5
			}
			subtract_variable = {
				which = ai_value
				value = 75
			}
		}
		add_entry = { name = Relative_Armies
			limit = {
				NOT = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							variable_name = frenchie_my_army_size
							value = army_size
						}
						export_to_variable = {
							variable_name = frenchie_their_army_size
							value = army_size
							who = FROM
						}
						change_variable = { which = frenchie_their_army_size value = 1 }
						divide_variable = { which = frenchie_my_army_size which = frenchie_their_army_size }
						multiply_variable = { which = frenchie_my_army_size value = 20 }
						subtract_variable = { which = frenchie_my_army_size value = 30 }

						check_variable = {
							which = frenchie_my_army_size
							value = 30
						}
					}
				}
			}
			export_to_variable = {
				variable_name = ai_value
				value = army_size
			}
			export_to_variable = {
				variable_name = ai_value_army
				value = army_size
				who = FROM
			}
			change_variable = { which = ai_value_army value = 1 }
			divide_variable = { which = ai_value which = ai_value_army }
			multiply_variable = { which = ai_value value = 20 }
			subtract_variable = { which = ai_value value = 30 }
		}
		add_entry = { name = Relative_Armies
			limit = {
				variable_arithmetic_trigger = {
					export_to_variable = {
						variable_name = frenchie_my_army_size
						value = army_size
					}
					export_to_variable = {
						variable_name = frenchie_their_army_size
						value = army_size
						who = FROM
					}
					change_variable = { which = frenchie_their_army_size value = 1 }
					divide_variable = { which = frenchie_my_army_size which = frenchie_their_army_size }
					multiply_variable = { which = frenchie_my_army_size value = 20 }
					subtract_variable = { which = frenchie_my_army_size value = 30 }

					check_variable = {
						which = frenchie_my_army_size
						value = 30
					}
				}
			}
			export_to_variable = {
				variable_name = ai_value
				value = 30
			}
		}
		add_entry = { name = Distance_Between_Borders
			export_to_variable = {
				variable_name = ai_value
				value = border_distance
				who = FROM
			}
			multiply_variable = {
				which = ai_value
				value = -1
			}
			divide_variable = { which = ai_value value = 4 }
		}
		add_entry = { name = Opinion
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			multiply_variable = {
				which = ai_value
				value = 0.20
			}
		}
		add_entry = { name = Relative_Diplomatic_Reputation
			export_to_variable = {
				variable_name = ai_value
				value = modifier:diplomatic_reputation
			}
			export_to_variable ={
			variable_name = ai_value_diprep
			value = modifier:diplomatic_reputation
			who = FROM
			}
			subtract_variable = {
				which = ai_value
				which = ai_value_diprep
			}
			multiply_variable = { which = ai_value value = 5 }
		}
		add_entry = { name = Development
			export_to_variable = {
				variable_name = ai_value
				value = total_development
				who = FROM
			}
			multiply_variable = {
				which = ai_value
				value = -0.3
			}
		}
		add_entry = { name = Bankruptcy
			limit = {
				ROOT = {
				is_bankrupt = yes
				}
			}
			export_to_variable = {
				variable_name = ai_value
				value = -100
				who = FROM
			}
		}
		add_entry = { name = Has_Prots_It_Would_Abandon
			limit = {
				FROM = { protectorate = 1 }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -20
				who = FROM
			}
		}
		add_entry = { name = Has_AVs_It_Would_Abandon
			limit = {
				FROM = { autonomous_vassal = 1 }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -30
				who = FROM
			}
		}
		add_entry = { name = Has_PU_It_Would_Abandon
			limit = {
				FROM = { personal_union = 1 }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -30
				who = FROM
			}
		}
		add_entry = { name = Has_vassals_It_Would_Abandon
			limit = {
				FROM = { vassal = 1 }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -30
				who = FROM
			}
		}
		add_entry = { name = Same_faith
			limit = {
				religion = FROM
			}
			export_to_variable = {
				variable_name = ai_value
				value = 20
			}
		}
		add_entry = { name = Close_faith
			limit = {
				NOT = { religion = FROM }
				religion_group = FROM
			}
			export_to_variable = {
				variable_name = ai_value
				value = 10
			}
		}
		add_entry = { name = Infidel
			limit = {
				NOT = { religion_group = FROM }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -15
			}
		}
	}

	ai_will_do = { # this is a trigger
		NOT = { #stops spam
			has_opinion_modifier = {
				who = FROM
				modifier = declined_protectorate_status
			}
			has_opinion_modifier = {
				who = FROM
				modifier = formed_protectorate_relationship
			}
			has_opinion_modifier = {
				who = FROM
				modifier = broke_protectorate_relationship
			}
			has_opinion_modifier = {
				who = FROM
				modifier = declined_avassal_status
			}
			has_opinion_modifier = {
				who = FROM
				modifier = formed_avassal_relationship
			}
			has_opinion_modifier = {
				who = FROM
				modifier = broke_avassal_relationship
			}
			has_opinion_modifier = {
				who = FROM
				modifier = formed_vassal_relationship
			}
		}
		NOT = {
			OR = {
				frenchie_enemy_of_FROM = yes
				FROM = { frenchie_enemy_of_ROOT = yes }
			}
		}
		NOT = {
			any_subject_country = {
				AND = {
					liberty_desire = 70
					is_subject_of_type = vassal
				}
			}
		}
		army_strength = {
			who = FROM
			value = 1.5
		}
		OR = {
			is_neighbor_of = FROM
			any_subject_country = {
				is_neighbor_of = FROM
			}
		}
		OR = {
			any_known_country = {
				frenchie_enemy_of_FROM = yes
				frenchie_enemy_of_ROOT = yes
			}
		}
	}
}

########@

demand_vassal = {
	category = influence

	alert_index = 40
	alert_tooltip = demand_dummy_alert_tooltip

	require_acceptance = yes # Whether the recipient gets an option to decline

	is_visible = {
		ROOT = {
			NOT = {
				is_subject_of_type = estate
				is_subject_of_type = vassal
				is_rival = FROM
				is_subject_of = FROM
			}

		}
		FROM = {
			NOT = {
				is_subject_of_type = estate
				is_subject_of_type = vassal
				is_emperor = yes
				is_great_power = yes
				is_rival = ROOT
			}
		}
	}
	is_allowed = {
		ROOT = {
			NOT = {
				is_at_war = yes
			}

		}
		FROM = {
			NOT = {
				is_at_war = yes
			}
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = 10
			mutual = yes
		}
		add_opinion = {
			who = FROM
			modifier = formed_vassal_relationship
		}
		log = "[From.GetName] has accepted to become a normal vassal under [Root.GetName]"
		create_subject = {
			subject_type = vassal
			subject = FROM
		}
	}
	on_decline = {
		add_opinion = {
			who = FROM
			modifier = declined_vassal_status
		}
	}
	ai_acceptance = {
		add_entry = { name = Base
			export_to_variable = {
				variable_name = ai_value
				value = -50
				who = FROM
				with = THIS
			}
		}
		add_entry = { name = Free_City
			limit = {
				FROM = { has_reform = free_city }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -50
			}
		}
		add_entry = { name = Trading_City
			limit = {
				FROM = { has_reform = trading_city }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -50
			}
		}
		add_entry = { name = In_Trade_League
			limit = {
				FROM = { is_in_trade_league = yes }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -50
			}
		}
		add_entry = { name = Married
			limit = {
				FROM = { marriage_with = ROOT }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 15
			}
		}
		add_entry = { name = Alliance
			limit = {
				FROM = { alliance_with = ROOT }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 30
			}
		}
		add_entry = { name = Is_Emperor
			limit = {
				ROOT = { is_emperor = yes }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 20
			}
		}
		add_entry = { name = Is_Elector
			limit = {
				FROM = { is_elector = yes}
			}
			export_to_variable = {
				variable_name = ai_value
				value = -80
				who = FROM
			}
		}
		add_entry = { name = Trust
			export_to_variable = {
				variable_name = ai_value
				value = trust
				who = FROM
				with = ROOT
			}
			multiply_variable = {
				which = ai_value
				value = 1.5
			}
			subtract_variable = {
				which = ai_value
				value = 75
			}
		}
		add_entry = { name = Relative_Armies
			limit = {
				NOT = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							variable_name = frenchie_my_army_size
							value = army_size
						}
						export_to_variable = {
							variable_name = frenchie_their_army_size
							value = army_size
							who = FROM
						}
						change_variable = { which = frenchie_their_army_size value = 1 }
						divide_variable = { which = frenchie_my_army_size which = frenchie_their_army_size }
						multiply_variable = { which = frenchie_my_army_size value = 20 }
						subtract_variable = { which = frenchie_my_army_size value = 30 }

						check_variable = {
							which = frenchie_my_army_size
							value = 30
						}
					}
				}
			}
			export_to_variable = {
				variable_name = ai_value
				value = army_size
			}
			export_to_variable = {
				variable_name = ai_value_army
				value = army_size
				who = FROM
			}
			change_variable = { which = ai_value_army value = 1 }
			divide_variable = { which = ai_value which = ai_value_army }
			multiply_variable = { which = ai_value value = 20 }
			subtract_variable = { which = ai_value value = 30 }
		}
		add_entry = { name = Relative_Armies
			limit = {
				variable_arithmetic_trigger = {
					export_to_variable = {
						variable_name = frenchie_my_army_size
						value = army_size
					}
					export_to_variable = {
						variable_name = frenchie_their_army_size
						value = army_size
						who = FROM
					}
					change_variable = { which = frenchie_their_army_size value = 1 }
					divide_variable = { which = frenchie_my_army_size which = frenchie_their_army_size }
					multiply_variable = { which = frenchie_my_army_size value = 20 }
					subtract_variable = { which = frenchie_my_army_size value = 30 }

					check_variable = {
						which = frenchie_my_army_size
						value = 30
					}
				}
			}
			export_to_variable = {
				variable_name = ai_value
				value = 30
			}
		}
		add_entry = { name = Distance_Between_Borders
			export_to_variable = {
				variable_name = ai_value
				value = border_distance
				who = FROM
			}
			multiply_variable = {
				which = ai_value
				value = -1
			}
			divide_variable = { which = ai_value value = 4 }
		}
		add_entry = { name = Opinion
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			multiply_variable = {
				which = ai_value
				value = 0.20
			}
		}
		add_entry = { name = Relative_Diplomatic_Reputation
			export_to_variable = {
				variable_name = ai_value
				value = modifier:diplomatic_reputation
			}
			export_to_variable ={
			variable_name = ai_value_diprep
			value = modifier:diplomatic_reputation
			who = FROM
			}
			subtract_variable = {
				which = ai_value
				which = ai_value_diprep
			}
			multiply_variable = { which = ai_value value = 5 }
		}
		add_entry = { name = Development
			export_to_variable = {
				variable_name = ai_value
				value = total_development
				who = FROM
			}
			multiply_variable = {
				which = ai_value
				value = -0.3
			}
		}
		add_entry = { name = Bankruptcy
			limit = {
				ROOT = {
				is_bankrupt = yes
				}
			}
			export_to_variable = {
				variable_name = ai_value
				value = -100
				who = FROM
			}
		}
		add_entry = { name = Has_Prots_It_Would_Abandon
			limit = {
				FROM = { protectorate = 1 }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -20
				who = FROM
			}
		}
		add_entry = { name = Has_AVs_It_Would_Abandon
			limit = {
				FROM = { autonomous_vassal = 1 }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -30
				who = FROM
			}
		}
		add_entry = { name = Has_PU_It_Would_Abandon
			limit = {
				FROM = { personal_union = 1 }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -30
				who = FROM
			}
		}
		add_entry = { name = Has_vassals_It_Would_Abandon
			limit = {
				FROM = { vassal = 1 }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -30
				who = FROM
			}
		}
		add_entry = { name = Same_faith
			limit = {
				religion = FROM
			}
			export_to_variable = {
				variable_name = ai_value
				value = 20
			}
		}
		add_entry = { name = Close_faith
			limit = {
				NOT = { religion = FROM }
				religion_group = FROM
			}
			export_to_variable = {
				variable_name = ai_value
				value = 10
			}
		}
		add_entry = { name = Infidel
			limit = {
				NOT = { religion_group = FROM }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -15
			}
		}
	}

	ai_will_do = { # this is a trigger
		NOT = { #stops spam
			has_opinion_modifier = {
				who = FROM
				modifier = declined_protectorate_status
			}
			has_opinion_modifier = {
				who = FROM
				modifier = formed_protectorate_relationship
			}
			has_opinion_modifier = {
				who = FROM
				modifier = broke_protectorate_relationship
			}
			has_opinion_modifier = {
				who = FROM
				modifier = declined_avassal_status
			}
			has_opinion_modifier = {
				who = FROM
				modifier = formed_avassal_relationship
			}
			has_opinion_modifier = {
				who = FROM
				modifier = broke_avassal_relationship
			}
			has_opinion_modifier = {
				who = FROM
				modifier = formed_vassal_relationship
			}
		}
		NOT = {
			OR = {
				frenchie_enemy_of_FROM = yes
				FROM = { frenchie_enemy_of_ROOT = yes }
			}
		}
		NOT = {
			any_subject_country = {
				AND = {
					liberty_desire = 70
					is_subject_of_type = vassal
				}
			}
		}
		army_strength = {
			who = FROM
			value = 1.5
		}
		OR = {
			is_neighbor_of = FROM
			any_subject_country = {
				is_neighbor_of = FROM
			}
		}
		OR = {
			any_known_country = {
				frenchie_enemy_of_FROM = yes
				frenchie_enemy_of_ROOT = yes
			}
		}
	}
}

cancel_vassal =  {
	category = french
	require_acceptance = no
	is_visible = {
		overlord_of = FROM
		FROM = {
			is_subject_of_type = vassal
		}
	}
	is_allowed = {
		is_at_war = no
	}
	on_accept = {
		FROM = {
			grant_independence = yes
		}
	}
	ai_will_do = {
		always = no
	}
}

##############

demand_autonomous_vassal = {
	category = influence

	alert_index = 40
	alert_tooltip = demand_dummy_alert_tooltip

	require_acceptance = yes # Whether the recipient gets an option to decline

	is_visible = {
		NOT = {
			AND = {
				is_subject = yes
				NOT = { is_subject_of_type = protectorate }
			}
			is_subject_of = FROM
			is_rival = FROM
			FROM = {
				NOT = {
					is_subject = yes
				}
				is_subject_of = ROOT
				is_rival = ROOT
				is_great_power = yes
				is_emperor = yes
			}
			FROM = { is_subject_of_type = autonomous_vassal }
			FROM = { is_subject_of_type = personal_union }
			FROM = { is_subject_of_type = ward }
			FROM = { is_subject_of_type = estate }
		}
	}
	is_allowed = {
		NOT = {
			AND = {
				is_subject = yes
				NOT = { is_subject_of_type = protectorate }
			}
			is_subject_of = FROM
			is_rival = FROM
			FROM = {
				AND = {
					is_subject = yes
					NOT = {
						is_subject_of_type = protectorate
						is_subject_of_type = autonomous_vassal
					}
				}
				is_subject_of = ROOT
				is_rival = ROOT
				is_great_power = yes
				is_emperor = yes
			}
			AND = {
				is_at_war = yes
				FROM = { is_at_war = yes }
			}
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = 10
			mutual = yes
		}
		log = "[From.GetName] has accepted to become an autonomous vassal under [Root.GetName]"
		create_subject = {
			subject_type = autonomous_vassal
			subject = FROM
		}
	}
	on_decline = {
		add_opinion = {
			who = FROM
			modifier = declined_avassal_status
		}
	}
	ai_acceptance = {
		add_entry = { name = Base
			export_to_variable = {
				variable_name = ai_value
				value = -50
				who = FROM
				with = THIS
			}
		}
		add_entry = { name = Free_City
			limit = {
				FROM = { has_reform = free_city }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -40
			}
		}
		add_entry = { name = Trading_City
			limit = {
				FROM = { has_reform = trading_city }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -40
			}
		}
		add_entry = { name = In_Trade_League
			limit = {
				FROM = { is_in_trade_league = yes }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -40
			}
		}
		add_entry = { name = Married
			limit = {
				FROM = { marriage_with = ROOT }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 15
			}
		}
		add_entry = { name = Alliance
			limit = {
				FROM = { alliance_with = ROOT }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 30
			}
		}
		add_entry = { name = Is_Emperor
			limit = {
				ROOT = { is_emperor = yes }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 20
			}
		}
		add_entry = { name = Is_Elector
			limit = {
				FROM = { is_elector = yes}
			}
			export_to_variable = {
				variable_name = ai_value
				value = -70
				who = FROM
			}
		}
		add_entry = { name = Trust
			export_to_variable = {
				variable_name = ai_value
				value = trust
				who = FROM
				with = ROOT
			}
			multiply_variable = {
				which = ai_value
				value = 1.5
			}
			subtract_variable = {
				which = ai_value
				value = 75
			}
		}
		add_entry = { name = Relative_Armies
			limit = {
				NOT = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							variable_name = frenchie_my_army_size
							value = army_size
						}
						export_to_variable = {
							variable_name = frenchie_their_army_size
							value = army_size
							who = FROM
						}
						change_variable = { which = frenchie_their_army_size value = 1 }
						divide_variable = { which = frenchie_my_army_size which = frenchie_their_army_size }
						multiply_variable = { which = frenchie_my_army_size value = 20 }
						subtract_variable = { which = frenchie_my_army_size value = 30 }

						check_variable = {
							which = frenchie_my_army_size
							value = 30
						}
					}
				}
			}
			export_to_variable = {
				variable_name = ai_value
				value = army_size
			}
			export_to_variable = {
				variable_name = ai_value_army
				value = army_size
				who = FROM
			}
			change_variable = { which = ai_value_army value = 1 }
			divide_variable = { which = ai_value which = ai_value_army }
			multiply_variable = { which = ai_value value = 20 }
			subtract_variable = { which = ai_value value = 30 }
		}
		add_entry = { name = Relative_Armies
			limit = {
				variable_arithmetic_trigger = {
					export_to_variable = {
						variable_name = frenchie_my_army_size
						value = army_size
					}
					export_to_variable = {
						variable_name = frenchie_their_army_size
						value = army_size
						who = FROM
					}
					change_variable = { which = frenchie_their_army_size value = 1 }
					divide_variable = { which = frenchie_my_army_size which = frenchie_their_army_size }
					multiply_variable = { which = frenchie_my_army_size value = 20 }
					subtract_variable = { which = frenchie_my_army_size value = 30 }

					check_variable = {
						which = frenchie_my_army_size
						value = 30
					}
				}
			}
			export_to_variable = {
				variable_name = ai_value
				value = 30
			}
		}
		add_entry = { name = Distance_Between_Borders
			export_to_variable = {
				variable_name = ai_value
				value = border_distance
				who = FROM
			}
			multiply_variable = {
				which = ai_value
				value = -1
			}
			divide_variable = { which = ai_value value = 5 }
		}
		add_entry = { name = Opinion
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			multiply_variable = {
				which = ai_value
				value = 0.25
			}
		}
		add_entry = { name = Relative_Diplomatic_Reputation
			export_to_variable = {
				variable_name = ai_value
				value = modifier:diplomatic_reputation
			}
			export_to_variable ={
			variable_name = ai_value_diprep
			value = modifier:diplomatic_reputation
			who = FROM
			}
			subtract_variable = {
				which = ai_value
				which = ai_value_diprep
			}
			multiply_variable = { which = ai_value value = 5 }
		}
		add_entry = { name = Development
			export_to_variable = {
				variable_name = ai_value
				value = total_development
				who = FROM
			}
			multiply_variable = {
				which = ai_value
				value = -0.3
			}
		}
		add_entry = { name = Bankruptcy
			limit = {
				ROOT = {
				is_bankrupt = yes
				}
			}
			export_to_variable = {
				variable_name = ai_value
				value = -100
				who = FROM
			}
		}
		add_entry = { name = Has_Prots_It_Would_Abandon
			limit = {
				FROM = { protectorate = 1 }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -20
				who = FROM
			}
		}
		add_entry = { name = Has_AVs_It_Would_Abandon
			limit = {
				FROM = { autonomous_vassal = 1 }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -30
				who = FROM
			}
		}
		add_entry = { name = Same_faith
			limit = {
				religion = FROM
			}
			export_to_variable = {
				variable_name = ai_value
				value = 20
			}
		}
		add_entry = { name = Close_faith
			limit = {
				NOT = { religion = FROM }
				religion_group = FROM
			}
			export_to_variable = {
				variable_name = ai_value
				value = 10
			}
		}
		add_entry = { name = Infidel
			limit = {
				NOT = { religion_group = FROM }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -15
			}
		}
	}

	ai_will_do = { # this is a trigger
		NOT = { #stops spam
			has_opinion_modifier = {
				who = FROM
				modifier = declined_protectorate_status
			}
			has_opinion_modifier = {
				who = FROM
				modifier = formed_protectorate_relationship
			}
			has_opinion_modifier = {
				who = FROM
				modifier = broke_protectorate_relationship
			}
			has_opinion_modifier = {
				who = FROM
				modifier = declined_avassal_status
			}
			has_opinion_modifier = {
				who = FROM
				modifier = formed_avassal_relationship
			}
			has_opinion_modifier = {
				who = FROM
				modifier = broke_avassal_relationship
			}
		}
		NOT = {
			OR = {
				frenchie_enemy_of_FROM = yes
				FROM = { frenchie_enemy_of_ROOT = yes }
			}
		}
		NOT = {
			any_subject_country = {
				AND = {
					liberty_desire = 50
					is_subject_of_type = autonomous_vassal
				}
			}
		}
		army_strength = {
			who = FROM
			value = 1.5
		}
		OR = {
			is_neighbor_of = FROM
			any_subject_country = {
				is_neighbor_of = FROM
			}
		}
		OR = {
			any_known_country = {
				frenchie_enemy_of_FROM = yes
				frenchie_enemy_of_ROOT = yes
			}
			has_opinion = {
				who = FROM
				value = 100
			}
			FROM = {
				has_opinion = {
					who = ROOT
					value = 100
				}
			}
		}
	}
}

cancel_autonomous_vassal =  {
	category = influence
	require_acceptance = no
	is_visible = {
		overlord_of = FROM
		FROM = {
			is_subject_of_type = autonomous_vassal
		}
	}
	is_allowed = {
		NOT = {
			is_at_war = yes
		}
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = -100
			mutual = yes
		}
		log = "[Root.GetName] has cancelled his autonomous vassal [From.GetName]"
		FROM = {
			grant_independence = yes
		}
	}
	ai_will_do = {
		frenchie_enemy_of_FROM = yes
	}
}

stop_being_autonomous_vassal = {
	category = french

	alert_index = 40
	alert_tooltip = demand_dummy_alert_tooltip

	require_acceptance = no # Whether the recipient gets an option to decline

	is_visible = {
		AND = {
			ROOT = { is_subject_of_type = autonomous_vassal }
			ROOT = { is_subject_of = FROM }
			#FROM = { ai = yes }
		}
	}
	is_allowed = {
		AND = {
			ROOT = { is_subject_of_type = autonomous_vassal }
			ROOT = { is_subject_of = FROM }
			#FROM = { ai = yes }
		}
	}
	on_accept = {
		FROM = {
			country_event = {
				id = leon_mod.1
			}
		}
		log = "[Root.GetName] has stopped being an autonomous vassal of [From.GetName]"
		ROOT = { grant_independence = yes }
		add_opinion = {
			who = FROM
			modifier = broke_avassal_relationship
		}
		FROM = {
			add_opinion = {
				who = ROOT
				modifier = broke_avassal_relationship
			}
		}
	}
	on_decline =	{
	}

	ai_acceptance = {
	}
	ai_will_do = {
		NOT = {
			has_opinion_modifier = {
				who = FROM
				modifier = formed_avassal_relationship
			}
		}
		ROOT = {
			OR = {
				liberty_desire = 90 #Leave at 90 whatever happens
				AND = {
					NOT = {
						overlord = { # Don't get away if you have an enemy neighbour in the prot network that you can kill
							any_subject_country = {
								OR = {
									is_subject_of_type = autonomous_vassal
									is_subject_of_type = vassal
								}
								is_neighbor_of = ROOT
								frenchie_enemy_of_ROOT = yes
								ROOT = {
									army_strength = {
										who = PREV
										value = 1.1
									}
								}
							}
						}
					}
					AND = {
						liberty_desire = 75 # Leave if you have 75 lib assuming no enemies
						any_known_country = {
							NOT = {
								frenchie_enemy_of_FROM = yes
								frenchie_enemy_of_ROOT = yes
							}
						}
					}
				}
				FROM = {
					frenchie_enemy_of_ROOT = yes
				}
			}
		}
	}
}

ask_to_become_autonomous_vassal = {
  category = influence

  alert_index = 40
  alert_tooltip = demand_dummy_alert_tooltip

  require_acceptance = yes # Whether the recipient gets an option to decline

  is_visible = {
    ROOT = {
		OR = {
			NOT = {
				is_subject_of = FROM
				AND = {
					is_subject = yes
					NOT = {
						OR = {
							is_subject_of_type = autonomous_vassal
							is_subject_of_type = protectorate
						}
					}
				}
			}

		}

	}
  }
  is_allowed = {
		ROOT = {
			NOT = {
				AND = {
					is_subject = yes
					NOT = {
						OR = {
							is_subject_of_type = autonomous_vassal
							is_subject_of_type = protectorate
						}
					}
				}
				is_subject_of = FROM
				is_at_war = yes
				is_rival = FROM
				is_emperor = yes
				is_great_power = yes
				protectorate = 1
				has_reform = free_city
				has_reform = trading_city
				is_in_trade_league = yes
			}
		}
		FROM = {
			NOT = {
				is_subject = yes
				is_at_war = yes
				is_rival = ROOT
			}
		}
	}
	on_accept = {
		ROOT = {
			country_event = {
				id = leon_mod.5
			}
		}
		log = "[From.GetName] has accepted [Root.GetName]'s request to become an autonomous vassal, they will now work together"
		add_trust = {
			who = FROM
			value = 5
			mutual = yes
		}
		add_opinion = {
			who = FROM
			modifier = formed_avassal_relationship
		}
		FROM = {
			add_opinion = {
				who = ROOT
				modifier = formed_avassal_relationship
			}
		}
		overlord = {
			ROOT = {
				add_trust = {
					who = PREV
					value = -5
					mutual = yes
				}
				add_opinion = {
					who = PREV
					modifier = broke_avassal_relationship
				}
			}
			add_opinion = {
				who = ROOT
				modifier = broke_avassal_relationship
			}
		}
		FROM = {
			create_subject = {
				subject_type = autonomous_vassal
				subject = ROOT
			}
		}
  }
  on_decline = {
		ROOT = {
			country_event = {
				id = leon_mod.6
			}
		}
		log = "[From.GetName] has refused [Root.GetName]'s request to become an autonomous vassal and will not protect him"
		add_opinion = {
			who = FROM
			modifier = declined_avassal_status
		}
  }
  ai_acceptance = {
    add_entry = { name = Base
      export_to_variable = {
          variable_name = ai_value
          value = 35
          who = FROM
          with = THIS
      }
    }
    add_entry = { name = Married
      limit = {
          FROM = { marriage_with = ROOT }
      }
      export_to_variable = {
          variable_name = ai_value
          value = 10
      }
    }
    add_entry = { name = Alliance
      limit = {
          FROM = { alliance_with = ROOT }
      }
      export_to_variable = {
          variable_name = ai_value
          value = 30
      }
    }
    add_entry = { name = Is_Elector
      limit = {
          FROM = { is_elector = yes}
      }
      export_to_variable = {
          variable_name = ai_value
          value = 50
          who = FROM
      }
    }
	add_entry = { name = Distance_Between_Borders
		export_to_variable = {
			variable_name = ai_value
			value = border_distance
			who = FROM
		}
		multiply_variable = {
			which = ai_value
			value = -1
		}
		divide_variable = { which = ai_value value = 5 }
	}
    add_entry = { name = Trust
      export_to_variable = {
          variable_name = ai_value
          value = trust
          who = FROM
          with = ROOT
      }
      multiply_variable = {
        which = ai_value
        value = 2
      }
      subtract_variable = {
        which = ai_value
        value = 100
      }
    }
    add_entry = { name = your_armies
      export_to_variable = {
          variable_name = ai_value
          value = army_size
          who = ROOT
      }
      multiply_variable = {   which = ai_value value = -0.5   }
    }
    add_entry = { name = your_economy
      export_to_variable = {
          variable_name = ai_value
          value = monthly_income
          who = ROOT
      }
      multiply_variable = {   which = ai_value value = 3  }
    }
    add_entry = { name = Opinion
      export_to_variable = {
          variable_name = ai_value
          value = opinion
          who = FROM
          with = ROOT
      }
      multiply_variable = {
          which = ai_value
          value = 0.25
      }
    }
    add_entry = { name = Development
      export_to_variable = {
        variable_name = ai_value
        value = total_development
        who = ROOT
      }
      multiply_variable = {
        which = ai_value
      	value = -0.2
      }
    }
    add_entry = { name = too_many_avs
        limit = {
            FROM = {
                any_subject_country = {
					is_subject_of_type = autonomous_vassal
                    liberty_desire = 50
                }
            }
        }
        export_to_variable = {
            variable_name = ai_value
            value = -100
            who = ROOT
        }
    }
		add_entry = { name = subjects_becoming_unmanageable
				limit = {
						FROM = {
								any_subject_country = {
									is_subject_of_type = autonomous_vassal
									OR = {
										liberty_desire = 50
										variable_arithmetic_trigger = {
											export_to_variable = {
													variable_name = frenchie_lib_desire
													value = modifier:liberty_desire
											}
											export_to_variable = {
												variable_name = frenchie_overlord_army_size
												value = army_size
												who = FROM
											}
											export_to_variable = {
												variable_name = frenchie_asker_army_size
												value = army_size
												who = ROOT
											}
											divide_variable = {
												which = frenchie_asker_army_size
												which = frenchie_overlord_army_size
											}
											multiply_variable = {
												which = frenchie_asker_army_size
												value = 75
											}
											change_variable = {
												which = frenchie_lib_desire
												which = frenchie_asker_army_size
											}

											check_variable = {
												which = frenchie_lib_desire
												value = 50
											}
										}
									}
								}
						}
				}
				export_to_variable = {
						variable_name = ai_value
						value = -50
						who = ROOT
				}
		}
    add_entry = { name = you_are_an_enemy
        limit = {
            FROM = {
                frenchie_enemy_of_ROOT = yes
            }
        }
        export_to_variable = {
            variable_name = ai_value
            value = -50
            who = ROOT
        }
    }
    add_entry = { name = subjects_protest
        limit = {
            FROM = {
                any_subject_country = {
					NOT = {
						is_subject_of_type = protectorate
					}
                    frenchie_enemy_of_ROOT = yes
                }
            }
        }
        export_to_variable = {
            variable_name = ai_value
            value = -15
            who = ROOT
        }
    }
    add_entry = { name = a_fox_in_the_hen_house
        limit = {
            FROM = {
                any_subject_country = {
					OR = {
						is_subject_of_type = vassal
						is_subject_of_type = autonomous_vassal
					}
                 	ROOT = {
                    	army_strength = {
                        	who = PREV
                        	value = 1
                    	}
                	}
                    ROOT = {
                        frenchie_enemy_of_PREV = yes
                    }
                }
            }
        }
        export_to_variable = {
            variable_name = ai_value
            value = -15
            who = ROOT
        }
    }
    add_entry = { name = ROOT_in_danger
        limit = {
            FROM = {
                any_neighbor_country = {
                    frenchie_enemy_of_FROM = yes
                }
            }
        }
        export_to_variable = {
            variable_name = ai_value
            value = 20
            who = ROOT
        }
    }
	}

  ai_will_do = {
		NOT = { #stops spam
			has_opinion_modifier = {
				who = FROM
				modifier = declined_protectorate_status
			}
			has_opinion_modifier = {
				who = FROM
				modifier = formed_protectorate_relationship
			}
			has_opinion_modifier = {
				who = FROM
				modifier = broke_protectorate_relationship
			}
			has_opinion_modifier = {
				who = FROM
				modifier = declined_avassal_status
			}
			has_opinion_modifier = {
				who = FROM
				modifier = formed_avassal_relationship
			}
			has_opinion_modifier = {
				who = FROM
				modifier = broke_avassal_relationship
			}
		}
		NOT = { # Don't do it if your army is about as big as FROM or bigger
			army_strength = {
				who = FROM
				value = 0.7
			}
		}
		frenchie_would_accept_becoming_protec = yes
		FROM = {
			is_neighbor_of = ROOT
		}
		OR = {
			ROOT = {
				any_neighbor_country = { # Do it if you feel menaced, and if you already have an overlord, if the next guy is stronger
					frenchie_enemy_of_ROOT = yes #your enemy hates you
					frenchie_enemy_of_FROM = yes #your enemy hates your future overlord
					army_strength = {
						who = ROOT
						value = 1.2
					}
					OR = {
						ROOT = { # Either you're a subject and looking for a stronger overlord
							is_subject = yes
							overlord = {
								FROM = {
									army_strength = {
										who = PREV
										value = 1.2
									}
								}
							}
						}
						AND = { # And/Or you're just looking for an enemy of the country to become protectorate of
							ROOT = {
								NOT = {
									is_subject = yes
								}
							}
							FROM = {
								frenchie_enemy_of_PREV = yes
							}
						}
					}
				}
			}
			FROM = { # Do it if you wanna eat any of FROM's protectorates
				any_subject_country = {
					OR = {
						is_subject_of_type = vassal
						is_subject_of_type = autonomous_vassal
					}
					ROOT = {
						army_strength = {
							who = PREV
							value = 1
						}
					}
					ROOT = {
						frenchie_enemy_of_PREV = yes
					}
				}
			}
		}
  }
}
##############


demand_protectorate = {
	category = influence

	alert_index = 40
	alert_tooltip = demand_dummy_alert_tooltip

	require_acceptance = yes # Whether the recipient gets an option to decline

	is_visible = {
		NOT = {
			is_subject = yes
			FROM = { is_subject_of = ROOT }
		}
	}
	is_allowed = {
		NOT = {
			is_subject = yes
			is_at_war = yes
			is_rival = FROM
		}
		FROM = {
			NOT = {
				is_subject = yes
				is_at_war = yes
				is_great_power = yes
				is_rival = ROOT
				is_emperor = yes
			}
		}
	}
	on_accept = {
		ROOT = {
			country_event = {
				id = leon_mod.2
			}
		}
		add_trust = {
			who = FROM
			value = 5
			mutual = yes
		}
		log = "[From.GetName] has accepted to become protectorate under [Root.GetName]"
		create_subject = {
			subject_type = protectorate
			subject = FROM
		}
		add_opinion = {
			who = FROM
			modifier = formed_protectorate_relationship
		}
		FROM = {
			add_opinion = {
				who = ROOT
				modifier = formed_protectorate_relationship
			}
		}
	}
	on_decline =	{
		ROOT = {
			country_event = {
				id = leon_mod.3
			}
		}
		log = "[From.GetName] has refused to become protectorate under [Root.GetName]"
		add_opinion = {
			who = FROM
			modifier = declined_protectorate_status
		}
	}
	ai_acceptance = {
		add_entry = { name = Base
			export_to_variable = {
				variable_name = ai_value
				value = -25
				who = FROM
				with = THIS
			}
		}
		add_entry = { name = Free_City
			limit = {
				FROM = { has_reform = free_city }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -30
			}
		}
		add_entry = { name = Trading_City
			limit = {
				FROM = { has_reform = trading_city }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -30
			}
		}
		add_entry = { name = In_Trade_League
			limit = {
				FROM = { is_in_trade_league = yes }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -30
			}
		}
		add_entry = { name = Married
			limit = {
				FROM = { marriage_with = ROOT }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 10
			}
		}
		add_entry = { name = Alliance
			limit = {
				FROM = { alliance_with = ROOT }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -30
			}
		}
		add_entry = { name = Is_Emperor
			limit = {
				ROOT = { is_emperor = yes }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 20
			}
		}
		add_entry = { name = Is_Elector
			limit = {
				FROM = { is_elector = yes}
			}
			export_to_variable = {
				variable_name = ai_value
				value = -50
				who = FROM
			}
		}
		add_entry = { name = Trust
			export_to_variable = {
				variable_name = ai_value
				value = trust
				who = FROM
				with = ROOT
			}
			multiply_variable = {
				which = ai_value
				value = 2
			}
			subtract_variable = {
				which = ai_value
				value = 100
			}
		}
		add_entry = { name = Relative_Armies
			limit = {
				NOT = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							variable_name = frenchie_my_army_size
							value = army_size
						}
						export_to_variable = {
							variable_name = frenchie_their_army_size
							value = army_size
							who = FROM
						}
						change_variable = { which = frenchie_their_army_size value = 1 }
						divide_variable = { which = frenchie_my_army_size which = frenchie_their_army_size }
						multiply_variable = { which = frenchie_my_army_size value = 20 }
						subtract_variable = { which = frenchie_my_army_size value = 30 }

						check_variable = {
							which = frenchie_my_army_size
							value = 30
						}
					}
				}
			}
			export_to_variable = {
				variable_name = ai_value
				value = army_size
			}
			export_to_variable = {
				variable_name = ai_value_army
				value = army_size
				who = FROM
			}
			change_variable = { which = ai_value_army value = 1 }
			divide_variable = { which = ai_value which = ai_value_army }
			multiply_variable = { which = ai_value value = 20 }
			subtract_variable = { which = ai_value value = 30 }
		}
		add_entry = { name = Relative_Armies
			limit = {
				variable_arithmetic_trigger = {
					export_to_variable = {
						variable_name = frenchie_my_army_size
						value = army_size
					}
					export_to_variable = {
						variable_name = frenchie_their_army_size
						value = army_size
						who = FROM
					}
					change_variable = { which = frenchie_their_army_size value = 1 }
					divide_variable = { which = frenchie_my_army_size which = frenchie_their_army_size }
					multiply_variable = { which = frenchie_my_army_size value = 20 }
					subtract_variable = { which = frenchie_my_army_size value = 30 }

					check_variable = {
						which = frenchie_my_army_size
						value = 30
					}
				}
			}
			export_to_variable = {
				variable_name = ai_value
				value = 30
			}
		}
		add_entry = { name = Distance_Between_Borders
			export_to_variable = {
				variable_name = ai_value
				value = border_distance
				who = FROM
			}
			multiply_variable = {
				which = ai_value
				value = -1
			}
			divide_variable = { which = ai_value value = 5 }
		}
		add_entry = { name = Opinion
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			multiply_variable = {
				which = ai_value
				value = 0.25
			}
		}
		add_entry = { name = Relative_Diplomatic_Reputation
			export_to_variable = {
				variable_name = ai_value
				value = modifier:diplomatic_reputation
			}
			export_to_variable ={
			variable_name = ai_value_diprep
			value = modifier:diplomatic_reputation
			who = FROM
			}
			subtract_variable = {
				which = ai_value
				which = ai_value_diprep
			}
			multiply_variable = { which = ai_value value = 5 }
		}
		add_entry = { name = Impressed_by_your_generals
			LIMIT = {
					has_commanding_three_star = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = 10
				who = FROM
			}
		}
		add_entry = { name = Development
			export_to_variable = {
				variable_name = ai_value
				value = total_development
				who = FROM
			}
			multiply_variable = {
				which = ai_value
				value = -0.2
			}
		}
		add_entry = { name = Bankruptcy
			limit = {
				ROOT = {
				is_bankrupt = yes
				}
			}
			export_to_variable = {
				variable_name = ai_value
				value = -100
				who = FROM
			}
		}
		add_entry = { name = Has_Prots_It_Would_Abandon
			limit = {
				FROM = { protectorate = 1 }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -20
				who = FROM
			}
		}
		add_entry = { name = Same_faith
			limit = {
				religion = FROM
			}
			export_to_variable = {
				variable_name = ai_value
				value = 20
			}
		}
		add_entry = { name = Close_faith
			limit = {
				NOT = { religion = FROM }
				religion_group = FROM
			}
			export_to_variable = {
				variable_name = ai_value
				value = 10
			}
		}
		add_entry = { name = Infidel
			limit = {
				NOT = { religion_group = FROM }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -15
			}
		}
	}

	ai_will_do = { # this is a trigger
		NOT = { #stops spam
			has_opinion_modifier = {
				who = FROM
				modifier = declined_protectorate_status
			}
			has_opinion_modifier = {
				who = FROM
				modifier = broke_protectorate_relationship
			}
		}
		NOT = {
			frenchie_enemy_of_FROM = yes
		}
		NOT = {
			any_subject_country = {
				AND = {
					liberty_desire = 50
					is_subject_of_type = protectorate
				}
			}
		}
		any_known_country = {
			frenchie_enemy_of_FROM = yes
			frenchie_enemy_of_ROOT = yes
		}
	}
}

make_protec_free_asasantana = {
	category = french

	alert_index = 40
	alert_tooltip = demand_dummy_alert_tooltip

	require_acceptance = yes # Whether the recipient gets an option to decline

	is_visible = {
		FROM = { is_subject_of_type = protectorate }
		overlord_of = FROM
		ai = yes
	}
	is_allowed = {
		FROM = { is_subject_of_type = protectorate }
		overlord_of = FROM
		FROM = { ai = yes}
	}
	on_accept = {
		FROM = { grant_independence = yes }
		log = "[Root.GetName] has released his vassal [From.GetName] (Asasantana)"
	}
	on_decline =	{
		log = "[Root.GetName] has not released his vassal [From.GetName] (Asasantana)"
	}

	ai_acceptance = {
		add_entry = { name = Base
			export_to_variable = {
				variable_name = ai_value
				value = 25
				who = FROM
				with = THIS
			}
		}
		add_entry = { name = Married
			limit = {
				FROM = { marriage_with = ROOT }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -10
			}
		}
		add_entry = { name = Alliance
			limit = {
				FROM = { alliance_with = ROOT }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 30
			}
		}
		add_entry = { name = Is_Emperor
			limit = {
				ROOT = { is_emperor = yes }
			}
			export_to_variable = {
				variable_name = ai_value
				value = -20
			}
		}
		add_entry = { name = Is_Elector
			limit = {
				FROM = { is_elector = yes}
			}
			export_to_variable = {
				variable_name = ai_value
				value = 50
				who = FROM
			}
		}
		add_entry = { name = Trust
			export_to_variable = {
				variable_name = ai_value
				value = trust
				who = FROM
				with = ROOT
			}
			multiply_variable = {
				which = ai_value
				value = -2
			}
			change_variable = {
				which = ai_value
				value = 100
			}
		}
		add_entry = { name = Relative_Armies
			limit = {
				NOT = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							variable_name = frenchie_my_army_size
							value = army_size
						}
						export_to_variable = {
							variable_name = frenchie_their_army_size
							value = army_size
							who = FROM
						}
						change_variable = { which = frenchie_their_army_size value = 1 }
						divide_variable = { which = frenchie_my_army_size which = frenchie_their_army_size }
						multiply_variable = { which = frenchie_my_army_size value = 20 }
						subtract_variable = { which = frenchie_my_army_size value = 30 }

						check_variable = {
							which = frenchie_my_army_size
							value = 30
						}
					}
				}
			}
			export_to_variable = {
				variable_name = ai_value
				value = army_size
			}
			export_to_variable = {
				variable_name = ai_value_army
				value = army_size
				who = FROM
			}
			change_variable = { which = ai_value_army value = 1 }
			divide_variable = { which = ai_value which = ai_value_army }
			multiply_variable = { which = ai_value value = 20 }
			subtract_variable = { which = ai_value value = 30 }
			multiply_variable = { which = ai_value value = -1 }
		}
		add_entry = { name = Relative_Armies
			limit = {
				variable_arithmetic_trigger = {
					export_to_variable = {
						variable_name = frenchie_my_army_size
						value = army_size
					}
					export_to_variable = {
						variable_name = frenchie_their_army_size
						value = army_size
						who = FROM
					}
					change_variable = { which = frenchie_their_army_size value = 1 }
					divide_variable = { which = frenchie_my_army_size which = frenchie_their_army_size }
					multiply_variable = { which = frenchie_my_army_size value = 20 }
					subtract_variable = { which = frenchie_my_army_size value = 30 }

					check_variable = {
						which = frenchie_my_army_size
						value = -30
					}
				}
			}
			export_to_variable = {
				variable_name = ai_value
				value = 30
			}
		}
		add_entry = { name = Distance_Between_Borders
			export_to_variable = {
				variable_name = ai_value
				value = border_distance
				who = FROM
			}
			multiply_variable = {
				which = ai_value
				value = 1
			}
			divide_variable = { which = ai_value value = 5 }
		}
		add_entry = { name = Opinion
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			multiply_variable = {
				which = ai_value
				value = -0.25
			}
		}
		add_entry = { name = Relative_Diplomatic_Reputation
			export_to_variable = {
				variable_name = ai_value
				value = modifier:diplomatic_reputation
			}
			export_to_variable ={
			variable_name = ai_value_diprep
			value = modifier:diplomatic_reputation
			who = FROM
			}
			subtract_variable = {
				which = ai_value
				which = ai_value_diprep
			}
			multiply_variable = { which = ai_value value = -5 }
		}
		add_entry = { name = Impressed_by_your_generals
			LIMIT = {
					has_commanding_three_star = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = -10
				who = FROM
			}
		}
		add_entry = { name = Development
			export_to_variable = {
				variable_name = ai_value
				value = total_development
				who = FROM
			}
			multiply_variable = {
				which = ai_value
				value = 0.2
			}
		}
		add_entry = { name = Bankruptcy
			limit = {
				ROOT = {
				is_bankrupt = yes
				}
			}
			export_to_variable = {
				variable_name = ai_value
				value = 100
				who = FROM
			}
		}
		add_entry = { name = Has_Prots_It_Would_Abandon
			limit = {
				FROM = { protectorate = 1 }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 20
				who = FROM
			}
		}
		add_entry = { name = Same_faith
			limit = {
				religion = FROM
			}
			export_to_variable = {
				variable_name = ai_value
				value = -20
			}
		}
		add_entry = { name = Close_faith
			limit = {
				NOT = { religion = FROM }
				religion_group = FROM
			}
			export_to_variable = {
				variable_name = ai_value
				value = -10
			}
		}
		add_entry = { name = Infidel
			limit = {
				NOT = { religion_group = FROM }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 15
			}
		}

	}

	ai_will_do = { # this is a trigger
		NOT = { #stops spam
			OR = {
				has_opinion_modifier = {
					who = FROM
		  			modifier = formed_protectorate_relationship
				}
			}
		}
		NOT = {
			frenchie_FROM_would_accept_becoming_protec = yes
		}
	}
}

abandon_Protectorate = {
	category = influence

	alert_index = 40
	alert_tooltip = demand_dummy_alert_tooltip

	require_acceptance = no # Whether the recipient gets an option to decline

	is_visible = {
		FROM = { is_subject_of_type = protectorate }
		overlord_of = FROM
	}
	is_allowed = {
		FROM = { is_subject_of_type = protectorate }
		overlord_of = FROM
	}
	on_accept = {
		FROM = {
			country_event = {
				id = leon_mod.4
			}
		}
		log = "[Root.GetName] has released his vassal [From.GetName]"
		add_opinion = {
			who = FROM
			modifier = broke_protectorate_relationship
		}
		FROM = {
			add_opinion = {
				who = ROOT
				modifier = broke_protectorate_relationship
			}
		}
		FROM = { grant_independence = yes }
	}
	on_decline =	{
	}

	ai_acceptance = {
	}

	ai_will_do = {
		NOT = {
			has_opinion_modifier = {
				who = FROM
				modifier = formed_protectorate_relationship
			}
		}
		OR = {
			AND = {
				NOT = { # Don't tell them to leave if they will feed your enemies
					any_known_country = {
							frenchie_enemy_of_FROM = yes
							frenchie_enemy_of_ROOT = yes
					}
				}
				FROM = { liberty_desire = 55 } # Don't tell them to leave if they pay tarrifs
			}
		}
	}
}

stop_being_protectorate = {
	category = french

	alert_index = 40
	alert_tooltip = demand_dummy_alert_tooltip

	require_acceptance = no # Whether the recipient gets an option to decline

	is_visible = {
		AND = {
			ROOT = { is_subject_of_type = protectorate }
			ROOT = { is_subject_of = FROM }
			#FROM = { ai = yes }
		}
	}
	is_allowed = {
		AND = {
			ROOT = { is_subject_of_type = protectorate }
			ROOT = { is_subject_of = FROM }
			#FROM = { ai = yes }
		}
	}
	on_accept = {
		FROM = {
			country_event = {
				id = leon_mod.1
			}
		}
		log = "[Root.GetName] has stopped being a protectorate of [From.GetName]"
		ROOT = { grant_independence = yes }
		add_opinion = {
			who = FROM
			modifier = broke_protectorate_relationship
		}
		FROM = {
			add_opinion = {
				who = ROOT
				modifier = broke_protectorate_relationship
			}
		}
	}
	on_decline =	{
	}

	ai_acceptance = {
	}
	ai_will_do = {
		NOT = {
			has_opinion_modifier = {
				who = FROM
				modifier = formed_protectorate_relationship
			}
		}
		ROOT = {
			OR = {
				liberty_desire = 90 #Leave at 90 whatever happens
				AND = {
					NOT = {
						overlord = { # Don't get away if you have an enemy neighbour in the prot network that you can kill
							any_subject_country = {
								is_subject_of_type = protectorate
								is_neighbor_of = ROOT
								frenchie_enemy_of_ROOT = yes
								ROOT = {
									army_strength = {
										who = PREV
										value = 1.1
									}
								}
							}
						}
					}
					AND = {
						liberty_desire = 75 # Leave if you have 75 lib assuming no enemies
						any_known_country = {
							NOT = {
								frenchie_enemy_of_FROM = yes
								frenchie_enemy_of_ROOT = yes
							}
						}
					}
				}
				FROM = {
					frenchie_enemy_of_ROOT = yes
				}
			}
		}
	}
}

ask_to_become_protectorate = {
  category = influence

  alert_index = 40
  alert_tooltip = demand_dummy_alert_tooltip

  require_acceptance = yes # Whether the recipient gets an option to decline

  is_visible = {
    ROOT = {
      NOT = {
				is_subject_of = FROM
			}
    }
  }
  is_allowed = {
		ROOT = {
			NOT = {
				is_subject_of = FROM
				is_at_war = yes
				is_rival = FROM
				is_emperor = yes
				is_great_power = yes
				protectorate = 1
				has_reform = free_city
				has_reform = trading_city
				is_in_trade_league = yes
			}
		}
		FROM = {
		NOT = {
			is_subject = yes
			is_at_war = yes
			is_rival = ROOT
		}
		}
	}
	on_accept = {
		ROOT = {
			country_event = {
				id = leon_mod.5
			}
		}
		log = "[From.GetName] has accepted [Root.GetName]'s request to become a protectorate and will now protect him"
		add_trust = {
			who = FROM
			value = 5
			mutual = yes
		}
		add_opinion = {
			who = FROM
			modifier = formed_protectorate_relationship
		}
		FROM = {
			add_opinion = {
				who = ROOT
				modifier = formed_protectorate_relationship
			}
		}
		overlord = {
			ROOT = {
				add_trust = {
					who = PREV
					value = -5
					mutual = yes
				}
				add_opinion = {
					who = PREV
					modifier = broke_protectorate_relationship
				}
			}
			add_opinion = {
				who = ROOT
				modifier = broke_protectorate_relationship
			}
		}
		FROM = {
			create_subject = {
				subject_type = protectorate
				subject = ROOT
			}
		}
  }
  on_decline = {
		ROOT = {
			country_event = {
				id = leon_mod.6
			}
		}
		log = "[From.GetName] has refused [Root.GetName]'s request to become a protectorate and will not protect him"
		add_opinion = {
			who = FROM
			modifier = declined_protectorate_status
		}
  }
  ai_acceptance = {
    add_entry = { name = Base
      export_to_variable = {
          variable_name = ai_value
          value = 25
          who = FROM
          with = THIS
      }
    }
    add_entry = { name = Married
      limit = {
          FROM = { marriage_with = ROOT }
      }
      export_to_variable = {
          variable_name = ai_value
          value = 10
      }
    }
    add_entry = { name = Alliance
      limit = {
          FROM = { alliance_with = ROOT }
      }
      export_to_variable = {
          variable_name = ai_value
          value = 30
      }
    }
    add_entry = { name = Is_Elector
      limit = {
          FROM = { is_elector = yes}
      }
      export_to_variable = {
          variable_name = ai_value
          value = 50
          who = FROM
      }
    }
		add_entry = { name = Distance_Between_Borders
			export_to_variable = {
				variable_name = ai_value
				value = border_distance
				who = FROM
			}
			multiply_variable = {
				which = ai_value
				value = -1
			}
			divide_variable = { which = ai_value value = 5 }
		}
    add_entry = { name = Trust
      export_to_variable = {
          variable_name = ai_value
          value = trust
          who = FROM
          with = ROOT
      }
      multiply_variable = {
        which = ai_value
        value = 2
      }
      subtract_variable = {
        which = ai_value
        value = 100
      }
    }
    add_entry = { name = your_armies
      export_to_variable = {
          variable_name = ai_value
          value = army_size
          who = ROOT
      }
      multiply_variable = {   which = ai_value value = -0.5   }
    }
    add_entry = { name = your_economy
      export_to_variable = {
          variable_name = ai_value
          value = monthly_income
          who = ROOT
      }
      multiply_variable = {   which = ai_value value = 3  }
    }
    add_entry = { name = Opinion
      export_to_variable = {
          variable_name = ai_value
          value = opinion
          who = FROM
          with = ROOT
      }
      multiply_variable = {
          which = ai_value
          value = 0.25
      }
    }
    add_entry = { name = Development
      export_to_variable = {
        variable_name = ai_value
        value = total_development
        who = ROOT
      }
      multiply_variable = {
        which = ai_value
      	value = -0.2
      }
    }
    add_entry = { name = too_many_prots
        limit = {
            FROM = {
                any_subject_country = {
										is_subject_of_type = protectorate
                    liberty_desire = 50
                }
            }
        }
        export_to_variable = {
            variable_name = ai_value
            value = -100
            who = ROOT
        }
    }
		add_entry = { name = subjects_becoming_unmanageable
				limit = {
						FROM = {
								any_subject_country = {
									is_subject_of_type = protectorate
									OR = {
										liberty_desire = 50
										variable_arithmetic_trigger = {
											export_to_variable = {
													variable_name = frenchie_lib_desire
													value = modifier:liberty_desire
											}
											export_to_variable = {
												variable_name = frenchie_overlord_army_size
												value = army_size
												who = FROM
											}
											export_to_variable = {
												variable_name = frenchie_asker_army_size
												value = army_size
												who = ROOT
											}
											divide_variable = {
												which = frenchie_asker_army_size
												which = frenchie_overlord_army_size
											}
											multiply_variable = {
												which = frenchie_asker_army_size
												value = 75
											}
											change_variable = {
												which = frenchie_lib_desire
												which = frenchie_asker_army_size
											}

											check_variable = {
												which = frenchie_lib_desire
												value = 50
											}
										}
									}
								}
						}
				}
				export_to_variable = {
						variable_name = ai_value
						value = -50
						who = ROOT
				}
		}
    add_entry = { name = you_are_an_enemy
        limit = {
            FROM = {
                frenchie_enemy_of_ROOT = yes
            }
        }
        export_to_variable = {
            variable_name = ai_value
            value = -50
            who = ROOT
        }
    }
    add_entry = { name = protectorates_protest
        limit = {
            FROM = {
                any_subject_country = {
                    frenchie_enemy_of_ROOT = yes
                }
            }
        }
        export_to_variable = {
            variable_name = ai_value
            value = -15
            who = ROOT
        }
    }
    add_entry = { name = a_fox_in_the_hen_house
        limit = {
            FROM = {
                any_subject_country = {
                 ROOT = {
                     army_strength = {
                         who = PREV
                         value = 1
                     }
                 }
                    ROOT = {
                        frenchie_enemy_of_PREV = yes
                    }
                }
            }
        }
        export_to_variable = {
            variable_name = ai_value
            value = -15
            who = ROOT
        }
    }
    add_entry = { name = ROOT_in_danger
        limit = {
            FROM = {
                any_neighbor_country = {
                    frenchie_enemy_of_FROM = yes
                }
            }
        }
        export_to_variable = {
            variable_name = ai_value
            value = 20
            who = ROOT
        }
    }
	}

  ai_will_do = {
	NOT = { #stops spam
		has_opinion_modifier = {
			who = FROM
			modifier = declined_protectorate_status
		}
		has_opinion_modifier = {
			who = FROM
			modifier = formed_protectorate_relationship
		}
		has_opinion_modifier = {
			who = FROM
			modifier = broke_protectorate_relationship
		}
		has_opinion_modifier = {
			who = FROM
			modifier = declined_avassal_status
		}
		has_opinion_modifier = {
			who = FROM
			modifier = formed_avassal_relationship
		}
		has_opinion_modifier = {
			who = FROM
			modifier = broke_avassal_relationship
		}
	}
		NOT = { # Don't do it if your army is about as big as FROM or bigger
			army_strength = {
				who = FROM
				value = 0.7
			}
		}
		frenchie_would_accept_becoming_protec = yes
		OR = {
			ROOT = {
				any_neighbor_country = { # Do it if you feel menaced, and if you already have an overlord, if the next guy is stronger
					frenchie_enemy_of_ROOT = yes #your enemy hates you
					frenchie_enemy_of_FROM = yes #your enemy hates your future overlord
					army_strength = {
						who = ROOT
						value = 1.2
					}
					OR = {
						ROOT = { # Either you're a subject and looking for a stronger overlord
							is_subject = yes
							overlord = {
								FROM = {
									army_strength = {
										who = PREV
										value = 1.2
									}
								}
							}
						}
						AND = { # And/Or you're just looking for an enemy of the country to become protectorate of
							ROOT = {
								NOT = {
									is_subject = yes
								}
							}
							FROM = {
								frenchie_enemy_of_PREV = yes
							}
						}
					}
				}
			}
			FROM = { # Do it if you wanna eat any of FROM's protectorates
				any_subject_country = {
					is_subject_of_type = protectorate
					ROOT = {
						army_strength = {
							who = PREV
							value = 1
						}
					}
					ROOT = {
						frenchie_enemy_of_PREV = yes
					}
				}
			}
		}
  }
}

##############

become_independent = {
	category = influence
	require_acceptance = no
	is_visible = {
		is_subject_of = FROM
		OR = {
			is_subject_of_type = protectorate
			is_subject_of_type = autonomous_vassal
		}
  }
	is_allowed = {
		is_subject_of = FROM
		OR = {
			is_subject_of_type = protectorate
			is_subject_of_type = autonomous_vassal
		}
		is_at_war = no
	}
	on_accept = {
		FROM = {
			country_event = {
				id = leon_mod.1
			}
		}
		if = {
			limit = {
				is_subject_of_type = protectorate
			}
			add_opinion = {
				who = FROM
				modifier = broke_protectorate_relationship
			}
			FROM = {
				add_opinion = {
					who = ROOT
					modifier = broke_protectorate_relationship
				}
			}
		}
		if = {
			limit = {
				is_subject_of_type = autonomous_vassal
			}
			add_opinion = {
				who = FROM
				modifier = broke_avassal_relationship
			}
			FROM = {
				add_opinion = {
					who = ROOT
					modifier = broke_avassal_relationship
				}
			}
		}
		grant_independence = yes
	}

	ai_will_do = {
		NOT = {
			always = yes
		}
	}
}

#propose_betrayal = {
#	category = alliance
#
#	alert_index = 40
#	alert_tooltip = demand_dummy_alert_tooltip
#
#	require_acceptance = yes # Whether the recipient gets an option to decline
#
#	is_visible = {
#		ROOT = {
#			OR = {
#				is_in_war = {
#					attacker_leader = ROOT
#				}
#				is_in_war = {
#					defender_leader = ROOT
#				}
#			}
#		}
#		FROM = {
#			war_with = ROOT
#			NOT = {
#				OR = {
#					is_in_war = {
#						attacker_leader = FROM
#					}
#					is_in_war = {
#						defender_leader = FROM
#					}
#				}
#				is_great_power = yes
#				is_emperor = yes
#				is_subject_of_type = estate
#				is_subject_of_type = ward
#				is_subject_of_type = personal_union
#			}
#		}
#	}
#	is_allowed = {
#		ROOT = {
#			OR = {
#				is_in_war = {
#					attacker_leader = ROOT
#				}
#				is_in_war = {
#					defender_leader = ROOT
#				}
#			}
#			NOT = {
#				is_rival = FROM
#			}
#			frenchie_pyramid = yes
#		}
#		FROM = {
#			war_with = ROOT
#			is_great_power = no
#			is_emperor = no
#			NOT = {
#				is_rival = ROOT
#				AND = {
#					OR = {
#						is_subject_of_type = estate
#						is_subject_of_type = ward
#						is_subject_of_type = personal_union
#					}
#					OR = { # This retarded piece of code is to check wether they are from the same overlord of once removed from the same overlord
#						overlord = {
#							overlord_of = ROOT
#						}
#						overlord = {
#							overlord = {
#								overlord_of = ROOT
#							}
#						}
#						ROOT = {
#							overlord = {
#								overlord = {
#									overlord_of = FROM
#								}
#							}
#						}
#					}
#				}
#			}
#		}
#	}
#	on_accept = {
#		add_trust = {
#			who = FROM
#			value = 10
#			mutual = yes
#		}
#		FROM = {
#			overlord = {
#				add_trust = {
#					who = FROM
#					value = -20
#					mutual = yes
#				}
#			}
#		}
#		log = "[From.GetName] Has changed sides in war and is now with [Root.GetName]"
#		if = {
#			limit = {
#				FROM = {
#					is_subject = no
#				}
#			}
#			create_subject = {
#				subject_type = traitor
#				subject = FROM
#			}
#			FROM = { grant_independence = yes }
#		}
#		if = {
#			limit = {
#				FROM = {
#					is_subject_of_type = protectorate
#				}
#			}
#			create_subject = {
#				subject_type = protectorate
#				subject = FROM
#			}
#		}
#		if = {
#			limit = {
#				FROM = {
#					is_subject_of_type = autonomous_vassal
#				}
#			}
#			create_subject = {
#				subject_type = autonomous_vassal
#				subject = FROM
#			}
#		}
#	}
#	on_decline = {
#		add_opinion = {
#			who = FROM
#			modifier = no_betray
#		}
#	}
#	ai_acceptance = {
#		add_entry = { name = Base
#			export_to_variable = {
#				variable_name = ai_value
#				value = -50
#				who = FROM
#				with = THIS
#			}
#		}
#		add_entry = { name = In_Trade_League
#			limit = {
#				FROM = { is_in_trade_league = yes }
#			}
#			export_to_variable = {
#				variable_name = ai_value
#				value = -20
#			}
#		}
#		add_entry = { name = Married
#			limit = {
#				FROM = {
#					marriage_with = ROOT
#				}
#			}
#			export_to_variable = {
#				variable_name = ai_value
#				value = 15
#			}
#		}
#		add_entry = { name = Is_Emperor
#			limit = {
#				ROOT = { is_emperor = yes }
#			}
#			export_to_variable = {
#				variable_name = ai_value
#				value = 20
#			}
#		}
#		add_entry = { name = Trust
#			export_to_variable = {
#				variable_name = ai_value
#				value = trust
#				who = FROM
#				with = ROOT
#			}
#			multiply_variable = {
#				which = ai_value
#				value = 1.5
#			}
#			subtract_variable = {
#				which = ai_value
#				value = 75
#			}
#		}
#		add_entry = { name = Distance_Between_Borders
#			export_to_variable = {
#				variable_name = ai_value
#				value = border_distance
#				who = FROM
#			}
#			multiply_variable = {
#				which = ai_value
#				value = -1
#			}
#			divide_variable = { which = ai_value value = 5 }
#		}
#		add_entry = { name = Opinion
#			export_to_variable = {
#				variable_name = ai_value
#				value = opinion
#				who = FROM
#				with = ROOT
#			}
#			multiply_variable = {
#				which = ai_value
#				value = 0.25
#			}
#		}
#		add_entry = { name = Relative_Diplomatic_Reputation
#			export_to_variable = {
#				variable_name = ai_value
#				value = modifier:diplomatic_reputation
#			}
#			export_to_variable ={
#			variable_name = ai_value_diprep
#			value = modifier:diplomatic_reputation
#			who = FROM
#			}
#			subtract_variable = {
#				which = ai_value
#				which = ai_value_diprep
#			}
#			multiply_variable = { which = ai_value value = 5 }
#		}
#		add_entry = { name = Bankruptcy
#			limit = {
#				ROOT = {
#					is_bankrupt = yes
#				}
#			}
#			export_to_variable = {
#				variable_name = ai_value
#				value = -100
#				who = FROM
#			}
#		}
#		add_entry = { name = frenchie_warscore
#			export_to_variable = {
#				which = ai_value
#				value = trigger_value:war_score
#			}
#		}
#	}
#
#	ai_will_do = { # this is a trigger
#		NOT = { #stops spam
#			has_opinion_modifier = {
#				who = FROM
#				modifier = no_betray
#			}
#		}
#		NOT = { # Don't ask your enemies to join you
#			OR = {
#				frenchie_enemy_of_FROM = yes
#				FROM = { frenchie_enemy_of_ROOT = yes }
#			}
#		}
#		NOT = {
#			any_subject_country = {
#				OR = {
#					AND = {
#						FROM = { is_subject_of_type = autonomous_vassal }
#						liberty_desire = 50
#						is_subject_of_type = autonomous_vassal
#					}
#					AND = {
#						FROM = { is_subject_of_type = protectorate }
#						liberty_desire = 50
#						is_subject_of_type = protectorate
#					}
#				}
#			}
#		}
#		NOT = {
#			FROM = {
#				any_owned_province = {
#					is_claim = ROOT
#				}
#			}
#		}
#		FROM = {
#			frenchie_would_betray = yes
#		}
#	}
#}

#offer_to_betray = {
#	category = alliance
#
#	alert_index = 40
#	alert_tooltip = demand_dummy_alert_tooltip
#
#	require_acceptance = yes # Whether the recipient gets an option to decline
#
#	is_visible = {
#		FROM = {
#			OR = {
#				is_in_war = {
#					attacker_leader = FROM
#				}
#				is_in_war = {
#					defender_leader = FROM
#				}
#			}
#		}
#		ROOT = {
#			war_with = FROM
#			NOT = {
#				OR = {
#					is_in_war = {
#						attacker_leader = ROOT
#					}
#					is_in_war = {
#						defender_leader = ROOT
#					}
#				}
#				is_great_power = yes
#				is_emperor = yes
#				is_subject_of_type = estate
#				is_subject_of_type = ward
#				is_subject_of_type = personal_union
#			}
#		}
#	}
#	is_allowed = {
#		FROM = {
#			OR = {
#				is_in_war = {
#					attacker_leader = FROM
#				}
#				is_in_war = {
#					defender_leader = FROM
#				}
#			}
#			NOT = {
#				is_rival = ROOT
#			}
#			frenchie_pyramid = yes
#		}
#		ROOT = {
#			war_with = FROM
#			is_great_power = no
#			is_emperor = no
#			NOT = {
#				is_rival = FROM
#				AND = {
#					OR = {
#						is_subject_of_type = estate
#						is_subject_of_type = ward
#						is_subject_of_type = personal_union
#					}
#					OR = { # This retarded piece of code is to check wether they are from the same overlord of once removed from the same overlord
#						overlord = {
#							overlord_of = FROM
#						}
#						overlord = {
#							overlord = {
#								overlord_of = FROM
#							}
#						}
#						FROM = {
#							overlord = {
#								overlord = {
#									overlord_of = ROOT
#								}
#							}
#						}
#					}
#				}
#			}
#		}
#	}
#	on_accept = {
#		add_trust = {
#			who = FROM
#			value = 10
#			mutual = yes
#		}
#		ROOT = {
#			overlord = {
#				add_trust = {
#					who = ROOT
#					value = -20
#					mutual = yes
#				}
#			}
#		}
#		log = "[Root.GetName] Has changed sides in war and is now rooting for [From.GetName]"
#		if = {
#			limit = {
#				ROOT = {
#					is_subject = no
#				}
#			}
#			FROM = {
#				create_subject = {
#					subject_type = traitor
#					subject = ROOT
#				}
#			}
#			ROOT = { grant_independence = yes }
#		}
#		if = {
#			limit = {
#				ROOT = {
#					is_subject_of_type = protectorate
#				}
#			}
#			FROM = {
#				create_subject = {
#					subject_type = protectorate
#					subject = ROOT
#				}
#			}
#		}
#		if = {
#			limit = {
#				ROOT = {
#					is_subject_of_type = autonomous_vassal
#				}
#			}
#			FROM = {
#				create_subject = {
#					subject_type = autonomous_vassal
#					subject = ROOT
#				}
#			}
#		}
#	}
#	on_decline = {
#		add_opinion = {
#			who = FROM
#			modifier = no_betray
#		}
#	}
#	ai_acceptance = {
#		add_entry = { name = Base
#			export_to_variable = {
#				variable_name = ai_value
#				value = 50
#				who = FROM
#				with = THIS
#			}
#		}
#		add_entry = { name = Married
#			limit = {
#				FROM = {
#					marriage_with = ROOT
#				}
#			}
#			export_to_variable = {
#				variable_name = ai_value
#				value = 15
#			}
#		}
#		add_entry = { name = Is_Emperor
#			limit = {
#				FROM = { is_emperor = yes }
#			}
#			export_to_variable = {
#				variable_name = ai_value
#				value = 20
#			}
#		}
#		add_entry = { name = Trust
#			export_to_variable = {
#				variable_name = ai_value
#				value = trust
#				who = FROM
#				with = ROOT
#			}
#			multiply_variable = {
#				which = ai_value
#				value = 1.5
#			}
#			subtract_variable = {
#				which = ai_value
#				value = 75
#			}
#		}
#		add_entry = { name = Distance_Between_Borders
#			export_to_variable = {
#				variable_name = ai_value
#				value = border_distance
#				who = FROM
#			}
#			multiply_variable = {
#				which = ai_value
#				value = -1
#			}
#			divide_variable = { which = ai_value value = 5 }
#		}
#		add_entry = { name = Opinion
#			export_to_variable = {
#				variable_name = ai_value
#				value = opinion
#				who = FROM
#				with = ROOT
#			}
#			multiply_variable = {
#				which = ai_value
#				value = 0.25
#			}
#		}
#		add_entry = { name = Bankruptcy
#			limit = {
#				ROOT = {
#					is_bankrupt = yes
#				}
#			}
#			export_to_variable = {
#				variable_name = ai_value
#				value = -100
#				who = FROM
#			}
#		}
#		add_entry = { name = frenchie_warscore
#			export_to_variable = {
#				which = ai_value
#				value = trigger_value:war_score
#			}
#			multiply_variable = {
#				which = ai_value
#				value = -1
#			}
#		}
#		add_entry = { name = claimed
#			limit = {
#				any_owned_province = {
#					is_claim = FROM
#				}
#			}
#			export_to_variable = {
#				which = ai_value
#				value = -100
#			}
#		}
#		add_entry = { name = protecs_unmanageable
#			limit = {
#				ROOT = {
#					is_subject_of_type = protectorate
#				}
#				FROM = {
#					any_subject_country = {
#						is_subject_of_type = protectorate
#						liberty_desire = 50
#					}
#				}
#			}
#			export_to_variable = {
#				which = ai_value
#				value = -100
#			}
#		}
#		add_entry = { name = avs_unmanageable
#			limit = {
#				ROOT = {
#					is_subject_of_type = autonomous_vassal
#				}
#				FROM = {
#					any_subject_country = {
#						is_subject_of_type = autonomous_vassal
#						liberty_desire = 50
#					}
#				}
#			}
#			export_to_variable = {
#				which = ai_value
#				value = -50
#			}
#		}
#	}
#
#	ai_will_do = {
#		NOT = { #stops spam
#			has_opinion_modifier = {
#				who = FROM
#				modifier = no_betray
#			}
#		}
#		NOT = { # Don't ask to join your enemies
#			OR = {
#				frenchie_enemy_of_FROM = yes
#				FROM = { frenchie_enemy_of_ROOT = yes }
#			}
#		}
#		ROOT = {
#			frenchie_would_betray = yes
#		}
#	}
#}

## Religion stuff
#		add_entry = { name = Same_Religion_group
#			LIMIT = {
#					frenchie_same_religion_group_as_FROM = yes
#			}
#			export_to_variable = {
#				variable_name = ai_value
#				value = 30
#			}
#		}
#		add_entry = { name = Different_Religion_group
#			LIMIT = {
#				NOT = {
#					frenchie_same_religion_group_as_FROM = yes
#				}
#			}
#
#			export_to_variable = {
#				variable_name = ai_value
#				value = -30
#				who = FROM
#			}
#		}
#		add_entry = { name = Borders_Unfaithful
#			LIMIT = {
#					AND = {
#							frenchie_same_religion_group_as_FROM = yes
#							FROM = { has_border_with_religious_enemy = yes }
#					}
#			}
#
#			export_to_variable = {
#				variable_name = ai_value
#				value = 15
#				who = FROM
#			}
#		}
#		add_entry = { name = root_excommunicated
#			LIMIT = {
#					AND = {
#							has_matching_religion = FROM
#							ROOT = {is_excommunicated = yes}
#					}
#			}
#
#			export_to_variable = {
#				variable_name = ai_value
#				value = -50
#				who = FROM
#			}
#		}
